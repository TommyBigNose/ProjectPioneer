@page "/Character/HeroCreator"

@using ProjectPioneer.Systems.Character
@using ProjectPioneer.Systems.Statistics;

@inject ProjectPioneer.Systems.IGame ProjectPioneerGame

<h3>Hero Creator</h3>

<div>
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Info</th>
                <th>Input</th>
                <th>Description</th>
                <th>Level Up Bonuses</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>Name</td>
                <td>INPUT</td>
                <td></td>
                <td></td>
            </tr>

            <tr>
                <td>Job</td>
                <td>
                    @foreach(var job in ProjectPioneerGame.GetAllJobs())
                    {
                        <button class="btn btn-primary" name="job@job.ID" @ref="jobElements[job.ID]" @onclick="@(_ => SetDisplayedJob(job))">
                            @job.Name
                        </button>
                        <br />
                    }
                </td>
                <td>@selectedJob.Description</td>
                <td>
                    <ProjectPioneer.Blazor.Pages.Components.StatsSimple Stats="@selectedJob.Stats" ShowLevel=false />
                </td>
            </tr>

            <tr>
                <td>Implant</td>
                 <td>
                    @foreach (var implant in ProjectPioneerGame.GetAllImplants())
                    {
                        <button class="btn btn-primary" name="implant@implant.ID" @ref="implantElements[implant.ID]" @onclick="@(_ => SetDisplayedImplant(implant))">
                            @implant.Name
                            </button>
                            <br />
                    }
                </td>
                <td>@selectedImplant.Description</td>
                <td>
                   <ProjectPioneer.Blazor.Pages.Components.StatsSimple Stats="@selectedImplant.Stats" ShowLevel=false />
                </td>
            </tr>
        </tbody>
    </table>
</div>

@code {
    private Dictionary<int, ElementReference> jobElements = new Dictionary<int, ElementReference>();
    private Dictionary<int, ElementReference> implantElements = new Dictionary<int, ElementReference>();
    string selectedName;
    IJob selectedJob;
    IImplant selectedImplant;

    string selectedStyle = "style=\"background-color:blue; color:white;\"";
    string unselectedStyle = "style=\"background-color:gray; color:white;\"";

    protected override void OnInitialized()
    {
        selectedJob = ProjectPioneerGame.GetAllJobs().First();
        selectedImplant = ProjectPioneerGame.GetAllImplants().First();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        //if (firstRender)
        //{
        //    await jobElements.First().Value.FocusAsync();
        //    await implantElements.First().Value.FocusAsync();
        //}
        //jobElements.First().Value.
    }

    private void SetDisplayedJob(IJob job)
    {
        selectedJob = job;
    }

    private void SetDisplayedImplant(IImplant implant)
    {
        selectedImplant = implant;
    }

    //style="background-color:blue; color:white;"
}
