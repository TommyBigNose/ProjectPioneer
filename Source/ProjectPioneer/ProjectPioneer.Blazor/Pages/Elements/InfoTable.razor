<h3>@DisplayName</h3>

<StandardButton ButtonClass="@ButtonClass"
                ButtonText="Show Bonuses"
                ClickCallback="@(_ => ShowStats())"
                ClickCallbackParameter=""/>
<br />

@if (_showStats)
{
    <div class="border border-3 border-dark rounded" style="width: 50%">
        <h4>Level up bonuses</h4>
        P-Atk: @DisplayStats?.PhysicalAttack
        <br/>
        P-Def: @DisplayStats?.PhysicalDefense
        <br/>
        M-Atk: @DisplayStats?.MagicalAttack
        <br/>
        M-Def: @DisplayStats?.MagicalDefense
        <br/>
        Spd: @DisplayStats?.PhysicalDefense
        <br/>
        <h4>Initial Elemental bonuses</h4>
        @SymbolHelper.GetELementalSymbol(StatType.FireAttack)-Atk: @DisplayStats?.FireAttack
        <br/>
        @SymbolHelper.GetELementalSymbol(StatType.FireDefense)-Def: @DisplayStats?.FireDefense
        <br/>
        @SymbolHelper.GetELementalSymbol(StatType.IceAttack)-Atk: @DisplayStats?.IceAttack
        <br/>
        @SymbolHelper.GetELementalSymbol(StatType.IceDefense)-Def: @DisplayStats?.IceDefense
        <br/>
        @SymbolHelper.GetELementalSymbol(StatType.LightningAttack)-Atk: @DisplayStats?.LightningAttack
        <br/>
        @SymbolHelper.GetELementalSymbol(StatType.LightningDefense)-Def: @DisplayStats?.LightningDefense
        <br/>
        @SymbolHelper.GetELementalSymbol(StatType.EarthAttack)-Atk: @DisplayStats?.EarthAttack
        <br/>
        @SymbolHelper.GetELementalSymbol(StatType.EarthDefense)-Def: @DisplayStats?.EarthDefense
    </div>
}
<br />

@code {
    [Parameter]
    public string? DisplayName { get; set; }
    
    [Parameter]
    public Stats? DisplayStats { get; set; }
    
    [Parameter]
    public string? ButtonClass { get; set; }
    
    private bool _showStats = false;

    private void ShowStats()
    {
        _showStats = !_showStats;
    }
}