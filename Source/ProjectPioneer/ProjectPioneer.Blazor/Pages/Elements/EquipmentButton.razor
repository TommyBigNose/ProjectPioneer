@using ProjectPioneer.Blazor.Models;
@using ProjectPioneer.Systems.Equipment;
@using ProjectPioneer.Systems.Statistics;

@inject ProjectPioneer.Systems.IGame ProjectPioneerGame

<button type="button" class="btn @GetItemStyle(CurrentEquipment)" @onclick="@(_ => ClickCallback.InvokeAsync(CurrentEquipment.Index.ToString()))">
    @GetEquipmentSymbol(CurrentEquipment.Equipment) | @GetValue(CurrentEquipment.Equipment): @CurrentEquipment.Equipment.Name | @GetCanEquipSymbol(CurrentEquipment.Equipment)
</button>

@code {
    [Parameter]
    public EventCallback<string> ClickCallback { get; set; }

    [Parameter]
    public EquipmentDisplay CurrentEquipment { get; set; }

    [Parameter]
    public EquipmentDisplay SelectedEquipment { get; set; }

    [Parameter]
    public bool IsShop { get; set; }

    private string GetEquipmentSymbol(IEquipment equipment)
    {
        string symbol = "";
        switch (equipment.EquipmentType)
        {
            case EquipmentType.Blade:
                symbol = "⚔️";
                break;
            case EquipmentType.Gun:
                symbol = "🔫";
                break;
            case EquipmentType.Staff:
                symbol = "🧙‍";
                break;
            case EquipmentType.Armor:
                symbol = "🧥";
                break;
            case EquipmentType.Aura:
                symbol = "🛡️";
                break;
        }

        return symbol;
    }

    private string GetCanEquipSymbol(IEquipment equipment)
    {
        if (equipment == null || !ProjectPioneerGame.CanEquip(equipment))
        {
            return "❌";
        }
        else
        {
            return "✅";
        }
    }

    private string GetValue(IEquipment equipment)
    {
        if(IsShop)
        {
            return equipment.GetPurchaseValue().ToString();
        }

        return equipment.GetSellableValue().ToString();
    }

    private string GetItemStyle(EquipmentDisplay equipmentDisplay)
    {
        return (SelectedEquipment.Index == equipmentDisplay.Index && SelectedEquipment.Equipment == equipmentDisplay.Equipment) ? "btn btn-info" : "btn btn-warning";
    }
}
