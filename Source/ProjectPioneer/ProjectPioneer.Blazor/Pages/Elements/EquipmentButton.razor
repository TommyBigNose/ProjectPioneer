@inject ProjectPioneer.Systems.IGame ProjectPioneerGame

<button type="button" class="btn @GetItemStyle(CurrentEquipment)" @onclick="@(_ => ClickCallback.InvokeAsync(CurrentEquipment.Index.ToString()))">
    @Utility.SymbolHelper.GetEquipmentSymbol(CurrentEquipment.Equipment) | @GetValue(CurrentEquipment.Equipment): @CurrentEquipment.Equipment.Name | @GetCanEquipSymbol(CurrentEquipment.Equipment)
</button>

@code {
    [Parameter]
    public EventCallback<string> ClickCallback { get; set; }

    [Parameter]
    public EquipmentDisplay CurrentEquipment { get; set; }

    [Parameter]
    public EquipmentDisplay SelectedEquipment { get; set; }

    [Parameter]
    public bool IsShop { get; set; }

    private string GetCanEquipSymbol(IEquipment equipment)
    {
        return Utility.SymbolHelper.GetCheckmarkOrX((equipment != null && ProjectPioneerGame.CanEquip(equipment)));
    }

    private string GetValue(IEquipment equipment)
    {
        return IsShop ? equipment.GetPurchaseValue().ToString() : equipment.GetSellableValue().ToString();
    }

    private string GetItemStyle(EquipmentDisplay equipmentDisplay)
    {
        return (SelectedEquipment.Index == equipmentDisplay.Index && SelectedEquipment.Equipment == equipmentDisplay.Equipment) ? "btn btn-info" : "btn btn-warning";
    }
}
